function [results] = secmc(N,T,n,theta)
% secadj monte carlo simulations of spacial error model
% y is generated by Baltagi 2007, equation 10,12
% secips is caculated by average t statistics of lambda
% secadj uses adjusted estimated variance to calculate t statistics
% info.model=0 for individual intercepts
% info.model=1 for individual deterministic trends
W=head(N,n);
%% generate y
T0=40;
y=zeros(N,T+T0);

for t=1:T+T0   
    epsilon=normrnd(0,1,[1,N]);
    u=(eye(N)-theta*W)^(-1)*epsilon';
    y(:,t+1)= y(:,t)+u;
end

%% ML estimate of theta
parmold=0;
options.Display='off';
options.MaxFunEvals=1000;
options.MaxIter=1000;
options.TolX=0.0001;
options.TolFun=0.0001;
[thetahat]=fminsearch('f_sec',parmold,options,y,W,N,T,T0); 



% GLS estimate of T statistics
ystar=(eye(N)-thetahat*W)*y;
t=zeros(N,1);
tau=ones(T,1);
MT=eye(T)-tau*(tau'*tau)^(-1)*tau';
sigmahat=zeros(N,1);

for i=1:N
    yt=ystar(i,T0+2:T+T0+1)';
    ylag=ystar(i,T0+1:T+T0)';
    deltay=yt-ylag;
    sigmahat(i)=deltay'*MT*deltay/(T-2);
    t(i)=deltay'*MT*ylag/(sigmahat(i)*ylag'*MT*ylag)^0.5;
end

results.cips=mean(t);
results.thetahat=thetahat;
end



