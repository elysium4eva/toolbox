function [results] = secgis(N,T,n,theta)
% secadj monte carlo simulations of spacial error model
% y is generated by Baltagi 2007, equation 10,12
% secips is caculated by average t statistics of lambda
% secadj uses adjusted estimated variance to calculate t statistics
% info.model=0 for individual intercepts
% info.model=1 for individual deterministic trends
W=head(N,n);
%% generate y
T0=40;
y=zeros(N,T+T0);
sigma=zeros(1,N);
epsilon=zeros(1,N);
for t=1:T+T0
    for i=1:N
        sigma(i)=rand+0.5;
        epsilon(i)=normrnd(0,sigma(i)^0.5);
    end
    u=(eye(N)-theta*W)^(-1)*epsilon';
    y(:,t+1)= y(:,t)+u;
end

%% calculate test statistic
t=zeros(N,1);
tau=ones(T,1);
MT=eye(T)-tau*(tau'*tau)^(-1)*tau';
sigmahat=zeros(N,1);

%% maximum likelihood estimate of theta
parmold=0;
iter=0;converge=1.0;criteria=0.0001;itermax=25;
options.Display='off';
options.MaxFunEvals=1000;
options.MaxIter=1000;
options.TolX=0.000001;
options.TolFun=0.000001;
[thetahat]=fminsearch('f_sec',parmold,options,y,W,N,T,T0); 
Bu=(eye(N)-thetahat*W)*(y(:,2:T+T0+1)-y(:,1:T+T0));

for i=1:N
sigmahat(i)=Bu(i,:)*Bu(i,:)'/(T+T0-2);
end

for i=1:N
    yt=y(i,T0+2:T+T0+1)';
    ylag=y(i,T0+1:T+T0)';
    deltay=yt-ylag;
    t(i)=deltay'*MT*ylag/(sigmahat(i)*ylag'*MT*ylag)^0.5;
end

results.cips=mean(t);
results.thetahat=thetahat;
end




